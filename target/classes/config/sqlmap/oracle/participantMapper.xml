<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="participant.dao.ParticipantDAO">
	<resultMap type="participantVO" id="participantMap">
		<result column="account_change" property="accountChange" />
		<result column="deposit_date" property="depositDate" />
		<result column="account_no" property="accountNo" />
	</resultMap>
		
	<!-- 모임원(모임주 포함) 추가 -->
	<insert id="insertParicipant" parameterType="participantVO">
		insert into participant(account_no, id, type, name)
		values(#{accountNo},#{id}, #{type}, #{name})
	</insert>
	
	<!-- safeAccountNo로 모임원 정보 조회 -->
	<select id="selectBySafeAccountNo" resultType="participantVO" parameterType="gatheringVO">
		select account_no as accountNo, id, type, name, to_char(register_date, 'yyyy.mm.dd') as registerDate
			from participant
				where account_no in
					(select account_no
						from gathering
							where safe_account_no = #{safeAccountNo})
			order by type asc
	</select>
	
	<!-- 딴 거 써보자 -->
	<!-- 입금 내역을 거래 내역에 추가하기 전, 입금 계좌가 모임계좌이며 입금한 사람이 해당 계좌의 모임원인지 여부 판단   -->
	<select id="selectIfDepositDues" resultType="participantVO" parameterType="transactionVO">
		select account_no as accountNo
			from participant
			where account_no = ${accountNo} and 
				(name = ${counterpart} 
					or name like '%'||DECODE(#{indication}, NULL, 'm1h3h5bf', #{indication})||'%')
	</select>
	
	<!-- 계좌번호로 모임원 정보 조회 -->
	<select id="selectByAccountNo" resultType="participantVO" parameterType="transactionVO"> 
	select name, type, to_char(register_date, 'yyyy.mm.dd') as registerDate, id
			from participant
				where account_no = #{accountNo}
	</select>
	
	<!-- 모임 참여자의 알림 설정들 가져오기(By safeAccountNo, id) -->
	<select id="selectAllNotifySettings" resultMap="participantMap" parameterType="gatheringVO"> 
	select account_change, transfer, deposit_date
			from participant
				where id = #{id} and
					 account_no = 
					 	(select account_no
					 		from gathering
					 			where safe_account_no = #{safeAccountNo})
	</select>
	
	<!-- 모임통장 및 모임원 변동 알림 변경 -->
	<update id="ChangeAccountChangeNotify" parameterType="participantVO">
		update participant 
		set account_change = #{accountChange}
		where id = #{id} and account_no = #{accountNo} 
	</update>	
	
	<!-- 입출금 알림 설정 변경 -->
	<update id="transferNotiChange" parameterType="participantVO">
		update participant 
		set transfer = #{transfer}
		where id = #{id} and account_no = #{accountNo} 
	</update>
	
	<!-- 회비 입금일 정기 알림 설정 변경  -->
		<update id="depositeDateNotiChange" parameterType="participantVO">
		update participant 
		set deposit_date = #{depositDate}
		where id = #{id} and account_no = #{accountNo} 
	</update>
	
	<!-- 모임통장 및 모임원 변동 알림을 받으려는 모임원들의 전화번호 얻어오기 -->
	<select id="selectAccChangeY" resultType="memberVO" parameterType="participantVO">
	select tel
		from member
			where id in
				(select id
					from participant
						where account_no = #{accountNo}
								and account_change = 'Y')
	</select>
	
	<!-- 멤버 삭제 -->
	<delete id="deleteParticipant"  parameterType="participantVO">
		delete from participant
		where id = #{id}
	</delete>
	
	<!-- 스케쥴러 -->
	
	<!-- 오늘 종료 예정인 모임통장의 모임원 정보 알아오기(계좌번호, id) -->
	<select id="participantTerminateDate" resultType="participantVO">
 		select account_no as accountNo, id, name
			from participant
				where account_no in
						(select account_no 
							from scheduled_end
								where TO_CHAR(end_date,'YY/MM/DD') 
									<![CDATA[ <= ]]> 
										TO_CHAR(SYSDATE,'YY/MM/DD'))
	</select>
	
	<!-- 종료하려는 모임계좌의 모임원 모두 삭제 -->
	<delete id="deleteAllParticipant" parameterType="participantVO">
		delete from participant
		where account_no
				in (select account_no from scheduled_end
						where TO_CHAR(end_date,'YY/MM/DD') 
									<![CDATA[ <= ]]> 
										TO_CHAR(SYSDATE,'YY/MM/DD'))
	</delete>
	
	<!-- 입출금 알림을 받으려는 모임원들의 전화번호 얻어오기 -->
	<select id="selectTransferY" resultType="memberVO" parameterType="participantVO">
	select tel
		from member
			where id in
				(select id
					from participant
						where account_no = #{accountNo}
								and transfer = 'Y')
	</select>
</mapper>