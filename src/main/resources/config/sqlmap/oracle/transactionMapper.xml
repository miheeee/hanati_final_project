<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="transaction.dao.TransactionDAO">
	
	<!-- 거래번호 미리 얻어오기 -->
	<select id="selectTransactionNo" resultType="int">
		select seq_t_transaction_no.nextval
		from dual
	</select>

	<!-- 거래내역 추가 -->
	<insert id="insertDetails" parameterType="transactionVO">
		insert into transaction
			(transaction_no, classification, amount, balance, account_no 
				, indication, counterpart, counterpart_account_no, counterpart_bank, paid_member)
			values(#{transactionNo}, #{classification}, ${amount}, #{balance}
					, #{accountNo}, #{indication, jdbcType=VARCHAR}, #{counterpart}, #{counterpartAccountNo}
					, #{counterpartBank}, #{paidMember, jdbcType=VARCHAR})
	</insert>
	
	<!-- 안심계좌번호로 거래 내역 조회 -->	
	<select id="selectBySafeAccountNo" resultType="transactionVO" parameterType="gatheringVO">
	select to_char(time, 'yyyy.mm.dd hh24:mi:ss') as time
			, classification, amount, balance,
				indication, counterpart,  
					counterpart_account_no as counterpartAccountNo,
						counterpart_bank as counterpartBank, 
							memo
	from transaction
	where account_no 
				= (select account_no
					from gathering
						where safe_account_no = #{safeAccountNo})
			and to_char(time,'yyyy/mm/dd hh:mi:ss') <![CDATA[ >= ]]> 
							(select to_char(register_date,'yyyy/mm/dd hh:mi:ss') 
								from participant
									where account_no = #{accountNo} and id = #{id})
	order by time desc
	</select>
	
	<!-- 안심계좌번호로 회비입금 내역 조회 -->	
	<select id="selectDepositedDuesList" resultType="transactionVO" parameterType="gatheringVO">
	select to_char(time, 'yyyy.mm.dd') as time
			, amount, balance, indication, counterpart, paid_member as paidMember 
	from transaction
	where (paid_member is not null) and
				account_no 
					= (select account_no
						from gathering
							where safe_account_no = #{safeAccountNo}) and
					to_char(time,'yyyy/mm/dd hh:mi:ss') <![CDATA[ >= ]]> 
						(select to_char(register_date,'yyyy/mm/dd hh:mi:ss') 
							from participant
								where account_no = #{accountNo} and id = #{id})	
	order by time desc
	</select>
	
	<!-- 계좌번호로 특정 기간 내 회비 입금 내역 조회(월 단위) -->
	<select id="selectDuesByMonthly" resultType="transactionVO" parameterType="transactionVO">
		select to_char(time, 'yyyy.mm.dd') as time, amount,
			counterpart, paid_member as paidMember
		from transaction
		where account_no = #{accountNo} and paid_member is not null
			and to_char(time, 'yyyy')||'년 '||to_char(time, 'mm')||'월' = #{time}
		order by time desc, counterpart asc 
	</select>	
	
	
	<!-- 계좌번호로 특정 기간 내 회비 입금 내역 조회(연 단위) -->
	<select id="selectDuesByYearly" resultType="transactionVO" parameterType="transactionVO">
		select to_char(time, 'yyyy.mm.dd') as time, amount,
			counterpart, paid_member as paidMember
		from transaction
		where account_no = #{accountNo} and paid_member is not null 
			and to_char(time, 'yyyy')||'년' = #{time}
		order by time desc, counterpart asc 
	</select>
	
	<!-- 모임원별 회비 입금 내역 조회 -->
	<select id="selectDuesByMember" resultType="transactionVO" parameterType="participantVO">
		select to_char(time, 'yyyy.mm.dd') as time, amount,
			paid_member as paidMember
		from transaction
		where account_no = #{accountNo} and paid_member = #{name} 
					and to_char(time,'yyyy/mm/dd hh:mi:ss') <![CDATA[ >= ]]> 
						(select to_char(register_date,'yyyy/mm/dd hh:mi:ss') 
							from participant
								where account_no = #{accountNo} and id = #{id})	
		order by time desc, paid_member asc 
	</select>
	
	<!-- 거래내역 조회(By거래번호) -->
	<select id="selectByTranNo" resultType="transactionVO" parameterType="int">
		select to_char(time, 'yyyy/mm/dd hh:mi') as time,
			classification, amount, balance, account_no as accountNo, 
			indication, counterpart
		from transaction
		where transaction_no = #{transactionNo}
	</select>
	

</mapper>